/////////////////////////////////////////////////////////////////////////////
/// this note contains step-to-step for add service to existing workspace ///
/////////////////////////////////////////////////////////////////////////////
1. masuk ke file caktin_ws/src, lalu buat packagenya
    catkin_create_pkg (srvPackageName) std_msgs message_generation

2. masuk ke folder packagenya, lalu edit CMakeListnya, tambahkan:
    generate_messages(
        DEPENDENCIES
            std_msgs
    )
    catkin_package(
        CATKIN_DEPENDS
            message_generation
            std_msgs
    )

3. edit package.xml, tambahkan:
    <exec_depend>message_runtime</exec_depend>
    <exec_depend>message_generation</exec_depend>

4. buat folder bernama srv, buat file .srv di dalamnya, misal namanya CountWords.srv

5. isi file .srv tersebut dengan tipe data request dan respond, misal:
    std_msgs/String     words
    std_msgs/Bool       count_articles
    ---
    std_msgs/Int32      num_words
    std_msgs/Int32      num_articles

6. lalu tinggal build, kalo kita sedang berada di directory package, tinggal ketik command
    catkin_make --this
    atau
    catkin build --this


/////////////////////////////////////////////////////////////////////////////
///                          Buat Server nya                              ///
/////////////////////////////////////////////////////////////////////////////

1. catkin_create_pkg rospy_simple_service_client rospy (srvPackageName), lalu masuk ke package directory nya.

2. nah sekarang kita akan ganti struktur directory packagenya.
   hapus folder 'src', lalu buat dua folder bernama 'common' dan 'ros'.
   common adalah tempat kita menaruh hal-hal yang tidak berkaitan dengan ros.
   sedangkan ros adalah tempat kita menaruh hal-hal yang berkaitan dengan ros.

3. masuk ke dalam folder 'ros' lalu buat folder 'src' (untuk menaruh .cpp) dan 'script' (untuk menaruh .py)

4. buat servernya, misal namanya simple_server_rospy.py (contoh kode ada di folder ini), jangan lupa buat file tsb executable

5. build lagi packagenya dan jangan lupa di source

6. jalankan rosrun rospy_simple_service_client simple_server_rospy.py