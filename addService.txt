/////////////////////////////////////////////////////////////////////////////
///                          create srv file                              ///
/////////////////////////////////////////////////////////////////////////////

1. masuk ke file caktin_ws/src, lalu buat packagenya
    catkin_create_pkg (srvPackageName) std_msgs message_generation

2. masuk ke package, buat folder bernama srv dan buat file .srv di dalamnya ---> (srvFileName).srv , misal CountWords.srv

3. isi file .srv tersebut dengan tipe data request dan respond, misal:
    std_msgs/String     words
    std_msgs/Bool       count_articles
    ---
    std_msgs/Int32      num_words
    std_msgs/Int32      num_articles

4. lalu edit CMakeListnya, tambahkan:
    add_service_files(
        FILES
            (srvFileName).srv
    )
    generate_messages(
        DEPENDENCIES
            std_msgs
    )
    catkin_package(
        CATKIN_DEPENDS
            message_generation
            std_msgs
    )

5. edit package.xml, tambahkan:
    <exec_depend>message_runtime</exec_depend>
    <exec_depend>message_generation</exec_depend>

6. lalu tinggal build, kalo kita sedang berada di directory package, tinggal ketik command
    catkin_make --this
    atau
    catkin build --this






/////////////////////////////////////////////////////////////////////////////
///                         Buat Server Rospy                             ///
/////////////////////////////////////////////////////////////////////////////

1. catkin_create_pkg (servicePackageName) rospy (srvPackageName)

2. tambahkan node servernya, misal namanya the_server_rospy.py (contoh kode ada di folder ini)
   Jangan lupa buat file tsb executable !!!

3. tambahkan di CMakeList: (kayak node py pada umumnya)
    catkin_install_python(PROGRAMS
        scripts/(nodeName).py
        DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
    )

4. build lagi packagenya dan jangan lupa di source, lalu jalankan:
   rosrun (servicePackageName) the_server_rospy.py


/////////////////////////////////////////////////////////////////////////////
///                         Buat Client Rospy                             ///
/////////////////////////////////////////////////////////////////////////////
1. boleh pake package yang sama dengan server, boleh beda

2. tambahkan node clientnya, misal namanya the_client_rospy.py (contoh kode ada di folder ini)
   Jangan lupa buat file tsb executable !!!

3. tambahkan di CMakeList: (kayak node py pada umumnya)
    catkin_install_python(PROGRAMS
        scripts/(nodeName).py
        DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
    )

4. build lagi packagenya dan jangan lupa di source, lalu jalankan:
   rosrun (servicePackageName) the_client_rospy.py







/////////////////////////////////////////////////////////////////////////////
///                         Buat Server Roscpp                            ///
/////////////////////////////////////////////////////////////////////////////

1. catkin_create_pkg (servicePackageName) roscpp (srvPackageName)

2. tambahkan node servernya, misal namanya the_server_roscpp.cpp (contoh kode ada di folder ini)

3. tambahkan di CMakeList: (kayak node cpp pada umumnya)
	add_executable(the_server_roscpp
        src/the_server_roscpp.cpp
    )
    add_dependencies(the_server_roscpp
        ${catkin_EXPORTED_TARGETS}
    )
	target_link_libraries(the_server_roscpp
	  ${catkin_LIBRARIES}
	)

4. ini optional aja, karena kita di contoh ini pake algoritma CountWords,
   kita tambahkan kode ini di awal CMakeList untuk memudahkan dalam split kata
    
    add_compile_options(-std=c++11)

4. build lagi packagenya dan jangan lupa di source, lalu jalankan:
   rosrun (servicePackageName) the_server_roscpp.cpp


/////////////////////////////////////////////////////////////////////////////
///                         Buat Client Roscpp                            ///
/////////////////////////////////////////////////////////////////////////////
1. boleh pake package yang sama dengan server, boleh beda

2. tambahkan node clientnya, misal namanya the_client_roscpp.cpp (contoh kode ada di folder ini)

3. tambahkan di CMakeList: (kayak node py pada umumnya)
	add_executable(the_client_roscpp
        src/the_client_roscpp.cpp
    )
    add_dependencies(the_client_roscpp
        ${catkin_EXPORTED_TARGETS}
    )
	target_link_libraries(the_client_roscpp
	  ${catkin_LIBRARIES}
	)

4. build lagi packagenya dan jangan lupa di source, lalu jalankan:
   rosrun (servicePackageName) the_client_roscpp.cpp